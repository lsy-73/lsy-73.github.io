[{"content":"关于快慢指针 1.怎么证明快慢指针在环中是可以相遇的？ 证明这个问题？可能你会说，只要快慢两个指针都进入环中，两者有速度差，快指针就一定能够追上慢指针。可是这儿“追上”有可能是两种情况（注意，这儿讨论的是一般情况，快指针步长k \u0026gt;= 2），一是恰好追上（也就是相遇了），二是追上并超过了慢指针。当然，这两种情况都不妨碍我们判断是否有环存在。下面我们就证明一下无论快指针步长k为多少，快慢指针在环中都能恰好相遇。\n证明开始：\n方法一：  链表图 \n首先，换个角度想问题。用一个步长为1的指针模拟遍历这个单向链表的过程。如上图所示，设单向链表的起始结点为X0（0是下标），环的起始结点为Xs。自然，遍历到最后就是一遍遍的重复这个环。如果，我们把遍历的项都不断记录到一个数组中的话(下标按次序递增)，最后就是一定长度的序列串的重复。例如，\nX0, X1, \u0026hellip; , Xs, Xs+1, \u0026hellip;, Xs+cl-1\n​ Xs+cl, Xs+cl+1, \u0026hellip;, Xs+2*cl-1\n​ \u0026hellip;\ncl (circle length)表示环的长度。\n假设 j 是 cl 的整数倍，并且是 cl 整数倍中满足 j \u0026gt; s 最小的那个数。对于任意的 k (k \u0026gt;= 2)，我们考虑下标分别为 j 和 jk 的两个位置 Xj 和 Xjk。可见，Xj 就是慢指针走了 j 步之后的位置，而 j \u0026gt; s 则保证了此时慢指针已经进入环中。同理，此时的快指针在位置 Xjk，必然也在环中。\n因为 j 是 cl 的整数倍，我们可以把 Xjk 看成是一个指针从位置 Xj 开始，走了 (k - 1) 次的 j 步。而每走 j 步，在单向链表的环中，其实又回到了 Xj 位置，因为 j 是 cl 的整数倍。所以我们有，Xj = Xjk 。这样，我们就证明了快慢指针肯定会恰好相遇的问题。\n为什么快指针步长要为 2 ？3，4，5可以吗 有了上面证明的基础，就不难发现 k 越小，所需的遍历次数就越少，因为给定一个带环的单向链表，j 的取值是确定的。所以，取 k ＝ 2。当然，除了 1 ，别的其他数都可以。\n正规一点儿的分析，如下：\n因为 j 是 cl 的整数倍，并且是 cl 整数倍中满足 j \u0026gt; s 最小的那个数。如果 s \u0026lt;= cl，那么 j = cl；如果 s \u0026gt; cl，那么 j \u0026lt; 2*s ，所以 j 的时间复杂度为 O(s + cl)。假设单向链表中结点的个数为 n，因为 s 和 cl 都是小于 n 的，所以 j = O(n) 。这是慢指针的时间复杂度，那么快指针的就是 O(nk) 。所以取 k = 2 ，可以最小化算法的运行时间。\n方法二(简单版)： 证明能相遇 假定环前节点有 x 个，环上节点有 y 个，快慢指针在环上分别走了 m，n 圈后相遇， 在环上相遇的位置为 z，用 i 表示慢指针在相遇的时候走了多少步。能有如下两表达式： x + my + z = 2*i + 1 x + ny + z = 1*i 两式相减 (m - n)y = (2-1)i + 1 说明 i+1 的值为环节点长度的倍数，即可相遇 2.为什么快指针步长要为 2 ？3，4，5可以吗 有了上面证明的基础，就不难发现 k 越小，所需的遍历次数就越少，因为给定一个带环的单向链表，j 的取值是确定的。所以，取 k ＝ 2。当然，除了 1 ，别的其他数都可以。\n正规一点儿的分析，如下：\n因为 j 是 cl 的整数倍，并且是 cl 整数倍中满足 j \u0026gt; s 最小的那个数。如果 s \u0026lt;= cl，那么 j = cl；如果 s \u0026gt; cl，那么 j \u0026lt; 2*s ，所以 j 的时间复杂度为 O(s + cl)。假设单向链表中结点的个数为 n，因为 s 和 cl 都是小于 n 的，所以 j = O(n) 。这是慢指针的时间复杂度，那么快指针的就是 O(nk) 。所以取 k = 2 ，可以最小化算法的运行时间。\n总结：取其他数可以，但每取大一倍数就得多走一圈，所以取2才是最优解。\n","date":"2022-04-07T14:20:13+08:00","image":"/archives/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/1_hu41d61907f311ce5b0ea210fd61a4a533_75291_120x120_fill_q75_box_smart1.jpg","permalink":"/archives/%E5%BF%AB%E6%85%A2%E6%8C%87%E9%92%88/","title":"快慢指针"},{"content":"1. Java中的泛型是什么 ? 使用泛型的好处是什么? 原则是什么？ Java泛型设计原则：只要在编译时期没有出现警告，那么运行时期就不会出现ClassCastException异常。\nJava泛型设计原则：只要在编译时期没有出现警告，那么运行时期就不会出现ClassCastException异常。\n泛型，即“参数化类型”，把类型明确的工作推迟到创建对象或调用方法的时候才去明确的特殊类型,把\u0026lt;数据类型\u0026gt;当作是参数一样传递\n好处,在集合中存储对象并在使用前进行类型转换是多么的不方便。泛型防止了那种情况的发生。它提供了编译期的类型安全，确保你只能把正确类型的对象放入集合中，避免了在运行时出现ClassCastException。\n2. Java的泛型是如何工作的 ? 什么是类型擦除 ? 　泛型是通过类型擦除来实现的，编译器在编译时擦除了所有类型相关的信息，所以在运行时不存在任何类型相关的信息。例如List在运行时仅用一个List来表示。这样做的目的，是确保能和Java 5之前的版本开发二进制类库进行兼容。你无法在运行时访问到类型参数，因为编译器已经把泛型类型转换成了原始类型。\n//类型被擦除了，保留的是类型的上限，String的上限就是Object List list = strlist; ​ List\u0026lt;String\u0026gt; stringList2 = list; List\u0026lt;Integer\u0026gt; intList2 = list; //你也可以把它赋给Integer类型的集合，但是当你把这个集合当 //成Integer的集合操作的时候，依旧会抛出ClassCastException异常 ​ for (Integer i:intList2){//java.lang.ClassCastException System.out.println(i); } \n3. 什么是泛型中的限定通配符和非限定通配符 ? 限定通配符对类型进行了限制。有两种限定通配符，一种是\u0026lt;? extends T\u0026gt;它通过确保类型必须是T的子类来设定类型的上界，另一种是\u0026lt;? super T\u0026gt;它通过确保类型必须是T的父类来设定类型的下界。泛型类型必须用限定内的类型来进行初始化，否则会导致编译错误。另一方面表示了非限定通配符，因为可以用任意类型来替代。\npublic class Animal { public static void main(String[] args) { ArrayList\u0026lt;Animal\u0026gt; animals=new ArrayList\u0026lt;\u0026gt;(); ArrayList\u0026lt;Cat\u0026gt; cats=new ArrayList\u0026lt;\u0026gt;(); ArrayList\u0026lt;? extends Cat\u0026gt; miniCats=new ArrayList\u0026lt;\u0026gt;(); showAnimal(cats); showAnimal(miniCats); //showAnimal(animals); } //类型通配符的上限，要求该泛型的类型，只能是实参类型，或实参类型的子类类型。 //此处上限是Cat，包括MiniCat但是不包括Anmial的 public static void showAnimal(ArrayList \u0026lt;? extends Cat\u0026gt; list){ for (int i = 0; i \u0026lt; list.size(); i++) { Cat cat = list.get(i); System.out.println(cat); } } //要求该泛型的类型，只能是实参类型，或实参类型的父类类型。 //类型通配符的下限，要求只能是Cat或者是Cat的父类 public static void showAnimal2(List\u0026lt;? super Cat\u0026gt; list){ //增强for循环，用object类型的o接受，遍历list for (Object o : list) { System.out.println(o); } } } class Cat extends Animal{ } class MiniCat extends Animal{ } \n4.可以把List\u0026lt; String\u0026gt;传递给一个接受List \u0026lt; Object\u0026gt;参数的方法吗？ 　对任何一个不太熟悉泛型的人来说，这个Java泛型题目看起来令人疑惑，因为乍看起来String是一种Object，所以List\u0026lt; String\u0026gt;应当可以用在需要List\u0026lt; Object\u0026gt;的地方，但是事实并非如此。真这样做的话会导致编译错误。如果你再深一步考虑，你会发现Java这样做是有意义的，因为List\u0026lt; Object\u0026gt;可以存储任何类型的对象包括String, Integer等等，而List\u0026lt; String\u0026gt;却只能用来存储Strings。\n例一:\n//这里与 List\u0026lt;Object\u0026gt; objectList; List\u0026lt;String\u0026gt; stringList; objectList = stringList; //compilation error incompatible types 例二:\nList list = new ArrayList();//默认类型是Object list.add(\u0026#34;A123\u0026#34;); list.add(\u0026#34;B234\u0026#34;); list.add(\u0026#34;C345\u0026#34;); System.out.println(list); for(int i=0;i\u0026lt;list.size();i++){ //若要将list中的元素赋给String变量，需要进行类型 //转换compatible types错误，显示list.get(i)返回的是Object String str = (String) list.get(i); System.out.println(str); } ​ list.add(123); //因为类型是Object，我们可以把Integer类型或者其他数据类型的元素也加入list之中 System.out.println(list.get(3)); ​ for(int i=0;i\u0026lt;list.size();i++){ //String str = (String) list.get(i); //但是在这里会报错java.lang.ClassCastException， //我们不能直接将Integer类型的数据转换成String System.out.println(list.get(i).getClass()); } 如代码中所示，当我们定义了一个List，list默认的类型是所有对象的基类Object，那么我们取出数据的时候需要经过一次类型转换才能进行对象的实际类型的相关操作。因为List中的类型是Object，那么我们先添加了String类型的数据，然后再添加Integer或者其他类型的数据也是允许的，因为编译时List中是Object类型的数据，然而运行的时候却是它本身的类型，所以当我们将List中的数据当作String处理时会抛出java.lang.ClassCastException\n5. Array中可以用泛型吗? 　这可能是Java泛型面试题中最简单的一个了，当然前提是你要知道Array事实上并不支持泛型，这也是为什么Joshua Bloch在Effective Java一书中建议使用List来代替Array，因为List可以提供编译期的类型安全保证，而Array却不能。\n本文参考： https://www.jb51.net/article/214509.htm\nhttps://cloud.tencent.com/developer/article/1033693\n","date":"2022-03-14T10:29:23+08:00","image":"/archives/%E6%B3%9B%E5%9E%8B/1_hu4e960fdb6340cae1ad375241e2cdb7c4_2583790_120x120_fill_box_smart1_3.png","permalink":"/archives/%E6%B3%9B%E5%9E%8B/","title":"泛型"},{"content":"GPG介绍 提到 GPG 不得不提一下 PGP(Pretty Good Privacy) ， PGP 最开始是由 Phil Zimmermann 开发，开发的目的是为了躲避监视，如果文件在网络上明文传输，那是多么危险。 PGP 虽然受很多人喜爱，但是是个商业软件，不能自由使用。所以自由基金会决定自己开发一个取名叫 GPG ，这就是 GPG 的由来。 GPG 和 PGP 都遵循 OpenPGP 加解密标准， 现在 PGP 被赛门铁克公司收购了。\n我们平时用各个网站免不了要记住密码，但如果都用一个那风险就很高，如果每个网站都不一样，那也记不住。通常的做法是把这些密码存到一个文件里，但是这个文件本身的安全我们没法保证，所以我们需要对这个文件进行加密。这就要用到我们今天的主角 GPG\n安装 安装就非常简单，没什么好说的，执行命令就完成了。我的是通过二进制文件下载的中文版，如果是brew下载应该是英文的，本文以英文版的为教程（中文的我就不多bb了）\nMac brew install gpg 生成密钥 现在我们通过 gpg --full-gen-key 来生成密钥。  密钥生成 \n Your selection? (选择要使用的加密算法),选1就行了\n  RSA keys may be between 1024 and 4096 bits long,(选择加密算法的长度，默认是2048，我选了最长的 4096)\n  Please specify how long the key should be valid.(选择密钥过期时间，如果是自己使用的话，可以选择永不过期，此处我选的0)\n  Real name:(输入用户名，不能少于5个字符，随便写自己喜欢的名字就行了)\n  Email address(输入自己的邮箱)\n  Comment:(这个可以不写，直接回车)\n  Change (N)ame, (C)omment, (E)mail or (O)kay/(Q)uit? O(如果确认无误，输入 O)\n 通过上面的操作，生成了一个名为 lsygpg ，使用 RAS 算法加密，并且永不过期的账户。\n你如果不想选择加密算法和长度信息，可以使用 gpg --gen-key 来快速生成。这样生成的默认算法是 RAS ，有效时间是一年， comment 为空。\n生成撤销密钥 生成完密钥之后，为了保险起见，我们需要生成一个撤销证书，以便在日后我们不使用这个密钥的时候可以撤销。\n这个撤销只有你把公钥上传到公钥服务器才有效，如果你不上传到公钥服务器其实没多大作用。即便申请撤销了，它还是会存在，只是不建议使用了。\n撤销的命令如下\ngpg --gen-revoke test1 加密 有了密钥之后，我们来看看怎么用它来加密一个文件\n通过 gpg -r [uid] -o file -e file 来加密一个文件，其中 -r 指定用哪个用户加密， -o 表示加密后输出的文件， -e 表示要加密的文件。如果不用 -o 默认会在原来的文件后面添加 .gpg 的后缀，用来表示加密文件。\n举个例子：假设我们有一个 test.txt 的文件，内容如下\n我是帅哥 我们对其进行加密\ngpg -r test1 -e test.txt -- 可以使用 gpg -r test1 -o test.txt.gpg -e test.txt 效果是一样的 执行完成后会得到一个名为 test.txt.gpg 的文件，这个文件是一个二进制文件。\n如果我们想要显示 ASCII ，可以通过添加 -a 来显示\n 密钥生成 \n解密 加密完之后，我们来看如何解密\n通过 gpg -o file -d file 来对文件进行解密，其中 -o 表示解密后输出的文件，要放在前面， -d 表示要解密的文件。\n我们就拿之前加密的文件来进行解密\ngpg -o decrypt.txt -d test.txt.gpg cat decrypt.txt 我是帅哥 gpg -o decrypt.txt -d test.txt.asc cat decrypt.txt 我是帅哥 解密的时候会让你输入密码  密钥生成 \n签名 二进制签名 GPG除了可以用来加密，还可以用来签名，比如在 Github 上可以添加公钥来表示这个代码确实是你提交的。\n使用 gpg --sign test.txt 对 test.txt 进行签名，生成 test.txt.gpg ，里面的内容是二进制。\nASCII 签名 除了二进制的方式还可以输出 ASCII 的签名，用 gpg --clearsign test.txt 对 test.txt 进行 ASCII 签名\ngpg --clearsign test.txt cat test.txt.asc -----BEGIN PGP SIGNED MESSAGE----- Hash: SHA256 This is gpg test -----BEGIN PGP SIGNATURE----- iQIzBAEBCAAdFiEEiPHq0DgY+8QbgkHmOxWoUusKglEFAl41jDIACgkQOxWoUusK glFEKhAAqwzhd4lexf1KyMTuCd5jAftPGB6AC1igmUx0gjpnMoZHv7gJkfFr8jTa iD958jXVY4fawsBQ+LEEkpJarBdZfY2No5Dw1PSlRlaUzCQgMkOPgLTdqGHuTNB0 /ENsIiweXv5kUXiSU1Paxedwi7yux5L34WWdi9Mg9KoLhJN84HEdzIKYZjJNyFtB WYP/Nqqqs01SBa3writrdVaj/ZaDqMtpzM9DSxfMT4P6NVDR3RGSTkQpnatEEa67 11i+oQXQcQT6a+O1vZ8GwbfoQ/EmPGT4nURs1HSEbAXj2aInquU5UjIvkvDp3q2x j9UbDBcQaQWQdAsuJItIfLeyY1BhejqVIjhPPFMhplp5XrHMMR+JJXOUJleQkkZV q35RitRlnRCjm+Z26aACS1vSS4Y23jaNV+MWv23OF570+iQ1lVotYLeLeMbuW4s9 oWQIqJydaePbL87wR3tTWm7OjlgZNrrSXh9aH366Oz5tjZVrZoJwNDupOj5uAgsf T58N0St0OlrPO2csUQw5Kkd7Ls1lKCkh+drPQEPHJJODzNo4WxjtPGwgwhIhLJcw o1TQxd3h5YhVInCs0XFzSx3Ty/Ds0Lm0zFa4AyINl0QiHkQy2OoD4rsFO7n6LdOk zJKrFEkSwuvTOeIBUOGulwZiZEFrxb9KpaCjhMLZgQfjSYAnyQ8= =lmwE -----END PGP SIGNATURE----- 这种方式会在源文件里加上签名。\n","date":"2022-01-31T13:42:39+08:00","image":"/archives/gpg%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%88%9B%E5%BB%BA/1_hucc2e35af8ac8ea5b87c4b7a5d77083a1_116253_120x120_fill_q75_box_smart1.jpg","permalink":"/archives/gpg%E7%9A%84%E4%BD%BF%E7%94%A8%E4%B8%8E%E5%88%9B%E5%BB%BA/","title":"GPG的使用与创建"},{"content":"前言 之前在购买 VPS 和域名时发现很多国外商家只支持 VISA，MASTERCARD 这两家的信用卡或者 PayPal，虽然国区 PayPal 可以绑定银联的借记卡/信用卡，但是除了这些以外我还有在 Google Play 购物的需求，未来也会有更多的境外支付的需要，目前我已经忍受不了每次去 Google Play 购物时都要先去淘宝买个礼品卡这个操作了，所以决定采用一个一劳永逸的办法：办理一张外币信用卡（准确来说是走非银联结算通道的信用卡）。我原本以为作为大学生办理一张外币信用卡会比较麻烦，不过想到之前在少数派看过《给普通大学生的境外支付指南》和《学生党 Google Play 剁手经验分享》，所以决定照此进行尝试。PS：本文都是我的个人经验分享，不一定完全有效，同时也可能具有时效性，仅作参考。\n大学生申请外币信用卡的方法 按照我的估计，很多大学生都没有考虑过申请信用卡，日常消费只需要借记卡绑定微信支付和支付宝就没问题了，有关于信用卡与借记卡的区别，是否应该申请信用卡，google 一下就能找到不少靠谱的回答，我就不多说了。不过大约十几年前大学生申请信用卡真的很难，由于申请信用卡时需要经过银行的资产审核，而大学生又没有工作，所以对于很多大学生来说是几乎不可能申请到信用卡。不过近年来已经有相当多的银行推出了大学生专属信用卡，上述的问题已经不复存在。然而别以为随便申请一张大学生信用卡就可以在 Google Play 之类的国外商店上购物了，想要在 Google Play 上购物，你需要一张非银联的信用卡（借记卡也行，但我只记得中国银行的 EMV 卡属于这一类）。注意，必须是非银联的卡，因为很多国外付款方式都不支持银联。除此以外，借记卡/信用卡还有单币/双币/全币的区别，只不过 VISA 和 MASTERCARD 基本上都是使用美元结算的，所以我们几乎不需要关心这个差别。在满足非银联的这个条件下，我们来选择一间银行的信用卡，参考学姿势的《大学生信用卡申请姿势》，里面对比了各个银行的大学生信用卡的区别，我们主要关注的是是否有 VISA 或 MasterCard 等非银联的卡，当然我也建议最好看下学姿势的其它文章，以后想要靠信用卡享受各种福利（俗称薅羊毛）的话可先要熟悉各家银行的信用卡的区别哦。\n以我申请的民生银行 more 世界卡为例，我先参考了《民生银行大学生信用卡申请指引》，然后通过民生银行官网进行申请（请注意是否为大学生版，大学生版是不需要填职业等信息的，如果不确定的话，点击学姿势的民生银行学术卡申请通道），在申请页面上如实填写必填的个人信息，在这当中，亲属手机号应该是最麻烦的，因为银行会根据这个手机号给你的家长发送短信，如果你的家长不同意你办信用卡，那么这里提供两个办法：\n1.假如你有一个手机号是你的家长的手机号的附属号码，那可以直接填这个手机号，然后在本人手机号填入一个使用自己的身份证注册的手机号。\n2.在家长的手机上设置短信骚扰拦截（每个国内 ROM 应该都有这个功能吧），根据短信内容设置关键字，短信的具体内容可看下方，例如可以设置拦截“民生银行”。\n 【民生银行】尊敬的A，您好！您的亲属B已向民生银行提交信用卡申请，我行预审通过，预计为其核发卡片的信用额度为5000.00元，具体申请事宜请您联系申请人核实。如您对本次申请存在异议，请于Y年M月D日24点前短信回复“QXSQ”，我行将终止本次申请。超过上述时间未回复则视为您同意本次申请。感谢您的支持！\n 搞定这些麻烦的申请步骤后，就是等待银行进行资料审核了。不出意外的话，大约一个星期后你就能收到通过信用卡申请的短信，假如不幸被拒的话，请回忆下自己是否填错了一些个人信息，或者之前是否曾有过欠钱没还的不良行为（例如花呗忘了还），或者学校不在某些银行的白名单当中。\n在发送短信告诉申请者通过信用卡申请后，银行会通过邮寄方式将信用卡寄给申请者，稍微等个两天，信用卡就到了！\n不过很可惜的是，刚到手的信用卡还不能被使用，需要进行激活后才可正常使用，有一些银行可以网上激活，然而民生银行是要求持卡人必须到柜台进行当面激活的，假如你在比较偏远的城市，这个就不太好办了。另外，我很想吐槽一下民生银行的初始信用卡密码设置手续，这 TM 居然需要我打电话进行设置，就完全没有考虑过安全性的问题吗？信用卡激活后，申请信用卡的整个过程总算是结束了，恭喜各位打开了新世界的大门。\n外币信用卡到手后 既然有了外币信用卡，那么很多国外商家的大门已经对我们敞开了。Google Play，美区 App Store，美区/日区亚马逊等商店都可以让我们疯狂剁手，还可以订阅 Spotify，Netflix 等流媒体服务。读到这里的读者可能都没有使用信用卡购物的经验，不过没关系，使用外币信用卡购物并不麻烦，一般而言只需填入信用卡卡号，CVC 码（信用卡背面的一个三位数），有效日期就可以了，以 Google Play 为例，说一下如何添加外币信用卡作为付款方式。\n在Google Play上添加外币信用卡作为付款方式 与申请信用卡相比，这节内容可以说是简单多了，直接根据图片操作即可（我已经添加了付款地址，如果之前尚未添加，那么在要求输入付款地址时可以随便输入相关信息，亲测姓名和地址等信息可以与信用卡上的信息不同；另外，确保信用卡里有大于等于 1 美元的余额/额度）：\n1.打开 Google Play，在侧边栏找到“付款方式”并点击\n 付款方式 \n2.点击“添加信用卡或借记卡”，按照要求输入信用卡卡号，CVC 码，有效日期（别填错了！！！）等\n 添加信用卡或借记卡 \n3.假如一切顺利的话，现在即可使用信用卡在 Google Play 上购买东西了，出现问题的话可参考《学生党 Google Play 剁手经验分享》中的“添加卡片并购物”一节进行解决，懒得与客服沟通的话可以先试着申请美区 PayPal 帐号，然后选择美区 PayPal 作为付款方式。\n一些小贴士 1.可以考虑使用外币信用卡申请美区 PayPal 帐号，使用 Paypal 付款更安全。 2.请善用 Google Play 中的心愿单功能，不急着买但想买的东西可放入心愿单中，等待打折，在黑色星期五的时候，很多 App 都会有幅度非常大的折扣。 3.外币信用卡建议设置自动购汇还款，一般在银行 App 中可设置此项，能免去每月手动购汇还款的麻烦，而且不用担心自己忘了还款。\n4.记得还款，各家银行的最后还款期限不尽相同，在每个月的最后还款期限前请确认一下自己是否已还款。\n5.再次强调，请注意用卡安全，信用卡背面的信息不要随便泄漏给别人。\n","date":"2021-12-17T00:00:00Z","image":"/archives/%E4%BD%9C%E4%B8%BA%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%91%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%A4%96%E5%B8%81%E4%BF%A1%E7%94%A8%E5%8D%A1%E5%B9%B6%E7%94%A8%E4%BA%8E%E5%A2%83%E5%A4%96%E6%94%AF%E4%BB%98/show_hua1e96627c79bb7cd39936a6d63fa6003_596890_120x120_fill_q75_box_smart1.jpg","permalink":"/archives/%E4%BD%9C%E4%B8%BA%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%9A%84%E6%88%91%E5%A6%82%E4%BD%95%E7%94%B3%E8%AF%B7%E5%A4%96%E5%B8%81%E4%BF%A1%E7%94%A8%E5%8D%A1%E5%B9%B6%E7%94%A8%E4%BA%8E%E5%A2%83%E5%A4%96%E6%94%AF%E4%BB%98/","title":"作为大学生的我如何申请外币信用卡并用于境外支付"},{"content":"初始化 输入命令：\nmkdir \u0026lt;项目名称\u0026gt; cd \u0026lt;项目名称\u0026gt; #进入目录 git init #初始仓库，新建一个 .git 目录 ls -la #查看所有文件 touch \u0026lt;file1\u0026gt; #创建一个文件 mkdir \u0026lt;dir1\u0026gt; #新建一个目录 现在可以修改文件内容\ngit status -sb #文件前面有 ?? 号 git add . #一次性将文件添加到暂存区 git status -sb #现在文件前面 ?? 变成了 A git commit -m \u0026#34;xx\u0026#34; #将你 add 过的内容正式提交到本地仓库，并添加注释 git log #查看历史变动 文件变动 git status -sb git add . git commit -m \u0026#34;xx\u0026#34; 将本地仓库上传到 GitHub 新建一个空仓库，名称与本地目录名一致，复制ssh 不需要勾选任何东西\ngit remote add origin git@github.com:xxxx/\u0026lt;仓库名\u0026gt; git push -u origin master 更改文件内容 git add . git commit -m \u0026#34;xx\u0026#34; git push ","date":"2021-11-14T20:58:22+08:00","image":"/archives/%E4%BD%BF%E7%94%A8git%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/p1_hue562663c14d4442894467021dc935054_243244_120x120_fill_q75_box_smart1.jpg","permalink":"/archives/%E4%BD%BF%E7%94%A8git%E5%88%9B%E5%BB%BA%E7%89%88%E6%9C%AC%E5%BA%93/","title":"使用git创建版本库"},{"content":"主人正在编辑内容\n请耐心等待\n","date":"2021-10-21T09:39:03+08:00","image":"/archives/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0/p24_huac97e976f1785bb1b8d211bc3b7d9c93_355660_120x120_fill_q75_box_smart1.jpg","permalink":"/archives/hugo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%97%A5%E8%AE%B0/","title":"hugo博客搭建日记"}]